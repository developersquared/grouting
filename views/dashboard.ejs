
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">
    <title>Dashboard</title>
    <!-- Bootstrap core CSS -->
    <link href="/assets/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->
    <link rel="stylesheet" href="/assets/css/chartist.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body class="dashboard">
<% include ./partials/navbar %>
<div class="container-fluid dashboard-container">
    <div class="container">
        <div class="row system-status flex-container">
            <!--<div class="flex-item"><h2>시스템 상태 <span class="status-led-off"></span></h2></div>-->
            <div class="flex-item"><h2>진공 펌프 상태 <span class="status-led-off"></span></h2></div>
            <div class="flex-item"><h2>그라우트 펌프 상태 <span class="status-led-off"></span></h2></div>
            <div class="flex-item"><h2>통신 모듈 <span class="status-led-off"></span></h2></div>
        </div>
        <br />
        <div class="row input-pump">
            <div class="col-md-3">
                <h2>주입 펌프</h2>
            </div>
            <div class="col-md-9">
                <div class="row input-velocity">
                    <div class="col-xs-4">
                        <h4 class="data-title">주입 속도</h4>
                    </div>
                    <div class="col-xs-8 monitor-data">
                        <div class="col-sm-4">
                            <h4><%- JSON.stringify(result[0][0].grout_flow_meter) %></h4>
                        </div>
                        <div class="col-sm-8">
                            <form id="grout-meter-form">
                                <div class="input-group">
                                    <input id="grout-meter-input" type="number" class="form-control" placeholder="0000.000">
                                    <span class="input-group-btn">
                                    <button class="btn btn-default" type="submit">Update</button>
                                </span>
                                </div><!-- /input-group -->
                            </form>
                        </div>
                    </div>
                </div>
                <div class="row input-pressure">
                    <div class="col-xs-4">
                        <h4 class="data-title">주입 압력</h4>
                    </div>
                    <div class="col-xs-6 monitor-data">
                        <div class="col-xs-12">
                            <h4><%- JSON.stringify(result[0][0].grout_press) %></h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row vacuum-pump">
            <div class="col-md-3">
                <h2>진공 펌프</h2>
            </div>
            <div class="col-md-9">
                <div class="row input-velocity">
                    <div class="col-xs-4">
                        <h4 class="data-title">진공 압력</h4>
                    </div>
                    <div class="col-xs-8 monitor-data">
                        <div class="col-sm-4">
                            <h4><%- JSON.stringify(result[0][0].vacuum_meter) %></h4>
                        </div>
                        <div class="col-sm-8">
                            <form id="vacuum-meter-form">
                                <div class="input-group">
                                    <input id="vacuum-meter-input" type="number" class="form-control" placeholder="0000.000">
                                    <span class="input-group-btn">
                                    <button class="btn btn-default" type="submit">Update</button>
                                </span>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="row input-pressure">
                    <div class="col-xs-4">
                        <h4 class="data-title">기체충실율</h4>
                    </div>
                    <div class="col-xs-6 monitor-data">
                        <div class="col-xs-12">
                            <h4>{0000.000}</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row air-vent">
            <div class="col-md-3">
                <h2>Air Vent</h2>
            </div>
            <div class="col-md-9">
                <div class="row input-velocity">
                    <div class="col-xs-4">
                        <h4 class="data-title">Air Vent-1</h4>
                    </div>
                    <div class="col-xs-6 monitor-data">
                        <div class="col-xs-12">
                            <h4><%- JSON.stringify(result[0][0].vent_1) %></h4>
                        </div>
                    </div>
                </div>
                <div class="row input-pressure">
                    <div class="col-xs-4">
                        <h4 class="data-title">Air Vent-2</h4>
                    </div>
                    <div class="col-xs-6 monitor-data">
                        <div class="col-xs-12">
                            <h4><%- JSON.stringify(result[0][0].vent_2) %></h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row graph">
            <div class="col-md-3">
                <h2>Graph</h2>
            </div>
            <div class="col-md-12">
                <div class="ct-chart" height="400px"></div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">연격제어 상태</h4>
            </div>
            <div class="modal-body">
                <p>원격제어 제한 상태입니다.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">닫기</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
<!--<script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>-->
<script src="/assets/bootstrap/js/bootstrap.js"></script>
<script src="/assets/js/moment.js"></script>
<script src="/assets/js/chartist.js"></script>
<script src="http://localhost:9001/socket.io/socket.io.js"></script>
<script>
    var remoteVar = <%- JSON.stringify(result[2][0] )%>;
    plcRemote = remoteVar.plc_remote_on;
    console.log(remoteVar);

    var socket = io.connect('http://localhost:9001');

    socket.on('connect', function() {
        console.log('socket connected');
    });

    if (plcRemote == "0") {
        $('#myModal').modal('show');
    } else {
        $('#grout-meter-form').submit(function (e) {
            e.preventDefault();
            var groutInput = $('#grout-meter-input').val();
            $.ajax({
                url: '/grout-meter-input/' + groutInput,
                type: 'post'
            });
            console.log(groutInput);

            socket.emit('grout_in', groutInput);
        });
        $('#vacuum-meter-form').submit(function (e) {
            e.preventDefault();
            var vacuumInput = $('#vacuum-meter-input').val();
            $.ajax({
                url: '/vacuum-meter-input/' + vacuumInput,
                type: 'post'
            });
            console.log(vacuumInput);

            socket.emit('vacuum-in', vacuumInput);
        });

    }

    var chart = new Chartist.Line('.ct-chart', {
        series: [
            {
                name: 'series-1',
                data: [
                    {x: new Date(moment(<%- JSON.stringify(result[1][0].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][0].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][1].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][1].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][2].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][2].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][3].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][3].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][4].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][4].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][5].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][5].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][6].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][6].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][7].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][7].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][9].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][8].vacuum_meter) %>'},
                    {x: new Date(moment(<%- JSON.stringify(result[1][9].rcv_time) %>, 'h:mm:ss.SSS a')), y: '<%- JSON.stringify(result[1][9].vacuum_meter) %>'}
                ]
            }
        ]
    }, {
            axisX: {
                type: Chartist.FixedScaleAxis,
                divisor: 10,
                labelInterpolationFnc: function(value) {
                    return moment(value).format('h:mm:s.S a');
                }
        },

        fullWidth: true,
        height: 300,
        high: 150,
        low: 0

    });
</script>
</body>
</html>
